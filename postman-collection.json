{
	"info": {
		"_postman_id": "project-management-api",
		"name": "Project Management API - Assessment",
		"description": "Complete API collection for Project Management System with Laravel coding standards - Form Requests, Services, DTOs, and Standardized Responses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"version": "2.0.0"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Authentication endpoints with Form Request validation and Service layer",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"phone\": \"+1234567890\",\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a new user with comprehensive validation via RegisterRequest"
					}
				},
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"phone\": \"+1234567890\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register an admin user for testing admin-only endpoints"
					}
				},
				{
					"name": "Register Manager",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Manager User\",\n    \"email\": \"manager@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"phone\": \"+1234567890\",\n    \"role\": \"manager\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register a manager user for testing manager-only endpoints"
					}
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.token) {",
									"        pm.collectionVariables.set('auth_token', response.data.token);",
									"        ",
									"        // Set role-specific tokens",
									"        const userRole = response.data.user.role;",
									"        if (userRole === 'admin') {",
									"            pm.collectionVariables.set('admin_token', response.data.token);",
									"        } else if (userRole === 'manager') {",
									"            pm.collectionVariables.set('manager_token', response.data.token);",
									"        }",
									"        ",
									"        pm.collectionVariables.set('user_id', response.data.user.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Login with credentials, automatically sets auth_token variable"
					}
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"me"
							]
						},
						"description": "Get authenticated user profile with standardized response format"
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logout"
							]
						},
						"description": "Logout user and revoke token"
					}
				}
			]
		},
		{
			"name": "Projects",
			"description": "Project management endpoints with Service layer and DTO validation. Note: Project creation now allows all authenticated users (not just admins)",
			"item": [
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects?per_page=15&search=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							],
							"query": [
								{
									"key": "per_page",
									"value": "15",
									"description": "Number of projects per page"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search projects by name or description"
								},
								{
									"key": "created_by",
									"value": "",
									"description": "Filter by creator user ID",
									"disabled": true
								}
							]
						},
						"description": "Get paginated list of projects with search and filter capabilities"
					}
				},
				{
					"name": "Get Single Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"1"
							]
						},
						"description": "Get single project with statistics and related data"
					}
				},
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.project) {",
									"        pm.collectionVariables.set('project_id', response.data.project.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Project with Laravel Standards\",\n    \"description\": \"Project created with Form Requests, Services, and DTOs\",\n    \"start_date\": \"2025-01-01\",\n    \"end_date\": \"2025-12-31\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							]
						},
						"description": "Create project - Now available to all authenticated users. Uses title field. start_date and end_date are optional."
					}
				},
				{
					"name": "Create Project (Minimal)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Minimal Project\",\n    \"description\": \"Only required fields provided\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							]
						},
						"description": "Create project with minimal data - start_date and end_date are now nullable"
					}
				},
				{
					"name": "Update Project (Admin Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Project Name\",\n    \"description\": \"Updated with new Laravel standards\",\n    \"start_date\": \"2025-02-01\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Update project - Admin only. Uses 'title' field and standardized validation."
					}
				},
				{
					"name": "Delete Project (Admin Only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Delete project - Admin only with standardized response"
					}
				}
			]
		},
		{
			"name": "Tasks",
			"description": "Task management with Service layer and comprehensive validation",
			"item": [
				{
					"name": "Get Project Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}/tasks?status=&assigned_to=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"tasks"
							],
							"query": [
								{
									"key": "status",
									"value": "",
									"description": "Filter by status: pending, in-progress, done"
								},
								{
									"key": "assigned_to",
									"value": "",
									"description": "Filter by assigned user ID"
								}
							]
						},
						"description": "Get tasks for a project with filtering options"
					}
				},
				{
					"name": "Get Single Task",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"1"
							]
						},
						"description": "Get single task with related data"
					}
				},
				{
					"name": "Create Task (Manager Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.task) {",
									"        pm.collectionVariables.set('task_id', response.data.task.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{manager_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Task with Standards\",\n    \"description\": \"Task created with Form Request validation\",\n    \"due_date\": \"2025-02-01\",\n    \"assigned_to\": {{user_id}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"tasks"
							]
						},
						"description": "Create task - Manager only with comprehensive validation"
					}
				},
				{
					"name": "Update Task (Manager/Assigned User)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in_progress\",\n    \"title\": \"Updated Task Title\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Update task - Available to managers and assigned users"
					}
				},
				{
					"name": "Delete Task (Manager Only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{manager_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Delete task - Manager only"
					}
				}
			]
		},
		{
			"name": "Comments",
			"description": "Comment system with Service layer and validation",
			"item": [
				{
					"name": "Get Task Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								"comments"
							]
						},
						"description": "Get all comments for a task with user information"
					}
				},
				{
					"name": "Add Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"This is a comment with proper validation and standardized responses\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								"comments"
							]
						},
						"description": "Add comment to task - Available to all authenticated users"
					}
				}
			]
		},
		{
			"name": "Testing & Validation",
			"description": "Endpoints to test validation errors and edge cases",
			"item": [
				{
					"name": "Test Validation Errors - Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"email\": \"invalid-email\",\n    \"password\": \"123\",\n    \"password_confirmation\": \"456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Test Form Request validation with invalid data"
					}
				},
				{
					"name": "Test Validation Errors - Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"\",\n    \"description\": null\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							]
						},
						"description": "Test project validation with empty title"
					}
				},
				{
					"name": "Test Unauthorized Access",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"1"
							]
						},
						"description": "Test accessing admin-only endpoint with regular user token"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "admin_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "manager_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "project_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "task_id",
			"value": "",
			"type": "string"
		}
	]
}